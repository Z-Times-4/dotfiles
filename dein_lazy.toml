[[plugins]]
repo = 'Shougo/neomru.vim'
on_if = 1

 [[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = 'has("lua") && !has("nvim")'
on_event = 'InsertEnter'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
source ~/.vim/rc/plugins/neosnippet.rc.vim
'''

# ファイルのアウトライン表示
[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# C#コーディング支援
[[plugins]]
repo = 'OmniSharp/omnisharp-vim'
on_path = ['*.cs','*.csi', '*.csx', '*.ipy']
hook_post_update = '''
if dein#util#_is_windows()
    let cmd = 'msbuild server/OmniSharp.sln'
  elseif dein#util#_is_mac()
    let cmd  = 'xbuild server/OmniSharp.sln'
  else
    let cmd = 'xbuild server/OmniSharp.sln'
  endif
  let g:dein#plugin.build = cmd
'''

# コードの実行
[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = [['n', '<Plug>']]
hook_add = 
'''
  nmap <silent> <Leader>r <Plug>(quickrun)
  let g:quickrun_config = {
\   "_" : {
\       "runner" : "vimproc",
\       "runner/vimproc/updatetime" : 10,
\       },
    \ }
'''

# Python支援
[[plugins]]
repo = 'davidhalter/jedi-vim'
hook_add = '''
  " jediにvimの設定を任せると'completeopt+=preview'するので
  " 自動設定機能をOFFにし手動で設定を行う
  let g:jedi#auto_vim_configuration = 0
  " 補完の最初の項目が選択された状態だと使いにくいためオフにする
  let g:jedi#popup_select_first = 0
  " quickrunと被るため大文字に変更
  let g:jedi#rename_command = '<Leader>R'
'''

# Tomlシンタックス
 [[plugins]]
 repo = 'cespare/vim-toml'
 on_ft = 'toml'

# go{{{
[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_structs = 1
  " let g:neocomplete#sources#omni#input_patterns.go = '\h\w\.\w*'
  set nossl

'''
on_ft = 'go'
# }}}

# haskell{{{
# 便利なghcmodなるコマンドをvimから便利に使うためのプラグイン
[[plugins]]
repo =  'itchyny/vim-haskell-sort-import'
on_ft = 'haskell'

# 補完用
[[plugins]]
repo =  'eagletmt/ghcmod-vim'
on_ft = 'haskell'

# インデントを賢くしてくれる
[[plugins]]
repo =  'eagletmt/neco-ghc'
on_ft = 'haskell'

# importを半自動で書いてくれる
[[plugins]]
repo =  'kana/vim-filetype-haskell'
on_ft = 'haskell'
hook_add = 'autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc'

# リファクタ
[[plugins]]
repo =  'dan-t/vim-hsimport'
on_ft = 'haskell'
hook_add = '''
autocmd FileType haskell nmap <silent> <F1> :silent update <bar> HsimportModule<CR>
autocmd FileType haskell nmap <silent> <F2> :silent update <bar> HsimportSymbol<CR>
'''

# シンタクスチェック
[[plugins]]
repo =  'glittershark/vim-hare'
on_ft = 'haskell'

# haskell}}}

#elm用config{{{

[[plugins]]
repo = 'elmcast/elm-vim'
on_ft="elm"
hook_source='''

" neomake用
let g:elm_format_autosave = 1
" define elm-make maker
let g:neomake_elm_elmmake_maker = {
  \ 'exe': 'elm-make',
  \ 'buffer_output': 1,
  \ 'errorformat':
    \ '%E%.%#--\ %m\ -%# %f' . ',' .
    \ '%C%l\\|' . ',' .
    \ '%C%.%#'
\ }

" enable elm-make on elm
let g:neomake_elm_enabled_makers = [ 'elmmake' ]

'''

[[plugin]]
repo = 'shime/vim-livedown'
on_ft = ['md','markdown']
on_i = 0


#}}}
