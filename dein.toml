[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
# depends = 'Shougo/unite.vim'
# on_map = [['n', '<Plug>']]
# on_if =  'isdirectory(bufname("%"))'

[[plugins]]
repo = 'Shougo/vimshell.vim'

# Unite{{{
[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
# hook_source = 'source ~/.vim/rc/plugins/unite.rc.vim'
# hook_add = '''
# nnoremap [unite] <Nop>
# nmap U [unite]
# nnoremap <silent> [unite]f :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
# nnoremap <silent> [unite]b :<C-u>Unite buffer<CR>
# nnoremap <silent> [unite]r :<C-u>Unite register<CR>
# nnoremap <silent> [unite]m :<C-u>Unite file_mru<CR>
# nnoremap <silent> [unite]c :<C-u>Unite bookmark<CR>
# nnoremap <silent> [unite]o :<C-u>Unite outline<CR>
# nnoremap <silent> [unite]t :<C-u>Unite tab<CR>
# nnoremap <silent> [unite]w :<C-u>Unite window<CR>
# nnoremap <silent> [unite]d :UniteBookmarkAdd<CR>
# " start unite in insert mode
# let g:unite_enable_start_insert = 1
# " use vimfiler to open directory
# call unite# custom_default_action("source/bookmark/directory", "vimfiler")
# call unite# custom_default_action("directory", "vimfiler")
# call unite# custom_default_action("directory_mru", "vimfiler")
# autocmd MyAutoCmd FileType unite call s:unite_settings()
# function! s:unite_settings()
# imap <buffer> <Esc><Esc> <Plug>(unite_exit)
# nmap <buffer> <Esc> <Plug>(unite_exit)
# nmap <buffer> <C-n> <Plug>(unite_select_next_line)
# nmap <buffer> <C-p> <Plug>(unite_select_previous_line)
# endfunction
# '''
# }}}

[[plugins]]
repo = 'thinca/vim-singleton'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'Shougo/neossh.vim'

# 括られてるtextを編集
[[plugins]]
repo = 'tpope/vim-surround'

#テキスト整形Align…の新しいやつ
[[plugins]]
repo = 'junegunn/vim-easy-align'


# セッション復元
[[plugins]]
repo = 'xolox/vim-session'
depends = ['xolox/vim-misc']
hook_add = '''
let s:local_session_directory = getcwd() .'/'. '.vimsessions'
"  存在すれば
if isdirectory(s:local_session_directory)
  " session保存ディレクトリをそのディレクトリの設定
  let g:session_directory = s:local_session_directory
  " vimを辞める時に自動保存
  let g:session_autosave = 'yes'
  " 引数なしでvimを起動した時にsession保存ディレクトリのdefault.vimを開く
  let g:session_autoload = 'yes'
  " 1分間に1回自動保存
  let g:session_autosave_periodic = 1
else
  let g:session_autosave = 'no'
  let g:session_autoload = 'no'
endif
'''

[[plugins]]
repo = 'xolox/vim-misc'

# タブ移動
[[plugins]]
repo = 'kana/vim-tabpagecd'

# grepヘルパー
[[plugins]]
repo = 'fuenor/qfixgrep'

# ssh接続
[[plugins]]
repo = 'ujihisa/vimshell-ssh'

# git log確認
[[plugins]]
repo = 'cohama/agit.vim'

# gitクライアント全般
[[plugins]]
repo = 'tpope/vim-fugitive'

# git rebase -i時のdiff
[[plugins]]
repo = 'hotwatermorning/auto-git-diff'

# tagsからアウトライン表示
#[[plugins]]
#repo = 'majutsushi/tagbar'

# windowリサイズ
[[plugins]]
repo = 'simeji/winresizer'

# neosnippetと連携
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# コンテクストごとにftを自動切り替えする
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'Shougo/context_filetype.vim' 

# コンテクストごとにftを判別する
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# タブごとに:cdが機能
[[plugins]]
repo = 'kana/vim-tabpagecd'

# grepヘルパー
[[plugins]]
repo = 'fuenor/qfixgrep'
hook_add= '''
"デフォルトで使用する外部grep
set grepprg=grep

"grepに含めたくない拡張子
let MyGrep_ExcludeReg = '[~#]$\|\.dll$\|\.exe$\|\.lnk$\|\.o$\|\.obj$\|\.pdf$\|\.xls$'

"大文字、小文字を気にせずに検索する。
let g:MyGrepDefault_Ignorecase = 1
'''

# インデント可視化
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_start_level=2
let g:indent_guides_auto_colors=0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=235
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=234
let g:indent_guides_color_change_percent = 30
let g:indent_guides_guide_size = 1
'''


# カラースキーマ定義{{{
# solarized カラースキーム
[[plugins]]
repo =  'altercation/vim-colors-solarized'
# mustang カラースキーム
[[plugins]]
repo =  'croaker/mustang-vim'
# wombat カラースキーム
[[plugins]]
repo =  'jeffreyiacono/vim-colors-wombat'
# jellybeans カラースキーム
[[plugins]]
repo =  'nanotech/jellybeans.vim'
# lucius カラースキーム
[[plugins]]
repo =  'vim-scripts/Lucius'
# zenburn カラースキーム
[[plugins]]
repo =  'vim-scripts/Zenburn'
# mrkn256 カラースキーム
[[plugins]]
repo =  'mrkn/mrkn256.vim'
# railscasts カラースキーム
[[plugins]]
repo =  'jpo/vim-railscasts-theme'
# pyte カラースキーム
[[plugins]]
repo =  'therubymug/vim-pyte'
# molokai カラースキーム
[[plugins]]
repo =  'tomasr/molokai'

# カラースキーム一覧表示に Unite.vim を使う
[[plugins]]
repo = 'ujihisa/unite-colorscheme'

# }}}
